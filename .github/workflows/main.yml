name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js for client and server
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Set up Python for python service
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install and build client
      working-directory: ./client
      run: |
        npm install
        npm run build

    - name: Install server dependencies
      working-directory: ./server
      run: npm install

    - name: Install Python dependencies
      working-directory: ./python
      run: |
        pip install -r requirements.txt

    - name: Log in to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push client Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t your-dockerhub-username/client:latest ./client
        docker push your-dockerhub-username/client:latest

    - name: Build and push server Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t your-dockerhub-username/server:latest ./server
        docker push your-dockerhub-username/server:latest

    - name: Build and push Python Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t your-dockerhub-username/python:latest ./python
        docker push your-dockerhub-username/python:latest

    - name: Deploy to AWS ECS
      if: github.ref == 'refs/heads/main'
      run: |
        aws ecs update-service \
          --cluster my-cluster \
          --service my-service \
          --force-new-deployment \
          --region us-west-2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2
