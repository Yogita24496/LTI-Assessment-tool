name: LTI Assessment CI/CD
on:
  push:
    branches: [ main ]  # Changed from master
  pull_request:
    branches: [ main ]  # Changed from master

env:
  CI: true  # Important for React tests
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: lti-assessment-app

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        ports: ["27017:27017"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4  # Updated version
        with:
          node-version: '18.x'
          cache: 'npm'
      
      # Install dependencies
      - name: Install dependencies
        run: |
          cd client && npm ci  # Use npm ci for faster, reliable installs
          cd ../server && npm ci
      
      # Fix permissions
      - name: Fix permissions
        run: |
          cd client && chmod +x node_modules/.bin/react-scripts
          cd ../server && chmod +x node_modules/.bin/* || true
      
      # Run tests
      - name: Run client tests
        run: |
          cd client && npm test -- --coverage --watchAll=false
        env:
          CI: true
      
      - name: Run server tests
        run: |
          cd server && npm test
      
      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      # Test Python service
      - name: Test Python service
        run: |
          cd python && pip install -r requirements.txt
          pytest --verbose
      
      # Build and push Docker images (only on main branch)
      - name: Log in to Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker images
        if: github.ref == 'refs/heads/main'
        run: |
          # Build images
          docker build -t $DOCKER_REGISTRY/$IMAGE_NAME-client:latest ./client
          docker build -t $DOCKER_REGISTRY/$IMAGE_NAME-server:latest ./server
          docker build -t $DOCKER_REGISTRY/$IMAGE_NAME-python:latest ./python
          
          # Push images
          docker push $DOCKER_REGISTRY/$IMAGE_NAME-client:latest
          docker push $DOCKER_REGISTRY/$IMAGE_NAME-server:latest
          docker push $DOCKER_REGISTRY/$IMAGE_NAME-python:latest
      
      # Configure AWS credentials
      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
      
      # Deploy to AWS ECS
      - name: Deploy to AWS ECS
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ./aws/task-definition.json
          service: lti-assessment-service
          cluster: lti-cluster
          wait-for-service-stability: true
