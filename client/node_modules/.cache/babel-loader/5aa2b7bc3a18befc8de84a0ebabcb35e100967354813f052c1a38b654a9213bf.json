{"ast":null,"code":"var _jsxFileName = \"D:\\\\nauss\\\\htdocs\\\\react\\\\lti-grade-passback\\\\client\\\\src\\\\components\\\\Assessment.jsx\",\n  _s = $RefreshSig$();\n// client/src/components/Assessment.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { createAssessment, getUserAssessments } from '../services/api';\nimport GradeSubmission from './GradeSubmission';\nimport { getAssessment } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Assessment = () => {\n  _s();\n  const [launchData, setLaunchData] = useState(null);\n  const [questions, setQuestions] = useState([{\n    id: 1,\n    text: 'What is the primary purpose of LTI 1.3?',\n    options: ['User authentication', 'Content delivery', 'Secure tool integration', 'Video streaming'],\n    correctAnswer: 'Secure tool integration'\n  }, {\n    id: 2,\n    text: 'Which protocol does LTI 1.3 use for authentication?',\n    options: ['Basic Auth', 'OAuth 2.0', 'SAML', 'Kerberos'],\n    correctAnswer: 'OAuth 2.0'\n  }, {\n    id: 3,\n    text: 'What does AGS stand for in LTI context?',\n    options: ['Automated Grading System', 'Assignment and Grade Services', 'Advanced Gradebook Solution', 'Academic Grading Standard'],\n    correctAnswer: 'Assignment and Grade Services'\n  }]);\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [assessment, setAssessment] = useState(null);\n  const [completedAssessment, setCompletedAssessment] = useState(null);\n  const navigate = useNavigate();\n  const id = searchParams.get('id');\n  useEffect(() => {\n    const fetchAssessment = async () => {\n      const response = await getAssessment(id);\n      setAssessment(response.assessment);\n    };\n    fetchAssessment();\n  }, []);\n  if (!assessment) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  if (assessment.isSubmitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Assessment Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This assessment has already been submitted and cannot be opened again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  const handleAnswerSelect = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n  };\n  const handleSubmit = async () => {\n    let correctCount = 0;\n    questions.forEach(question => {\n      if (answers[question.id] === question.correctAnswer) {\n        correctCount++;\n      }\n    });\n    const calculatedScore = correctCount / questions.length * 100;\n    setScore(calculatedScore);\n    if (launchData && launchData.lineItemUrl) {\n      try {\n        const assessmentData = {\n          userId: launchData.userId,\n          courseId: launchData.courseId,\n          resourceLinkId: launchData.resourceLinkId,\n          lineItemUrl: launchData.lineItemUrl,\n          scoreGiven: calculatedScore,\n          scoreMaximum: 100,\n          activityProgress: 'Completed',\n          gradingProgress: 'FullyGraded',\n          feedback: `You got ${correctCount} out of ${questions.length} questions correct.`\n        };\n        const result = await createAssessment(assessmentData);\n        setAssessment(result.assessment);\n      } catch (error) {\n        console.error('Error creating assessment:', error);\n      }\n    }\n    setSubmitted(true);\n  };\n  if (!launchData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n  if (completedAssessment) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assessment-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Assessment Already Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GradeSubmission, {\n        score: completedAssessment.scoreGiven,\n        assessment: completedAssessment,\n        totalQuestions: questions.length,\n        correctAnswers: Math.round(completedAssessment.scoreGiven / 100 * questions.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LTI Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", launchData.name || launchData.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Course: \", launchData.courseId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), !submitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions\",\n        children: questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"option-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${question.id}`,\n                value: option,\n                checked: answers[question.id] === option,\n                onChange: () => handleAnswerSelect(question.id, option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 23\n              }, this), option]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmit,\n        disabled: Object.keys(answers).length !== questions.length,\n        children: \"Submit Assessment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(GradeSubmission, {\n      score: score,\n      assessment: assessment,\n      totalQuestions: questions.length,\n      correctAnswers: Object.values(answers).filter((answer, index) => answer === questions[index].correctAnswer).length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Assessment, \"fEfUHV5LRluf8CiZqu9AodXCtB8=\", false, function () {\n  return [useNavigate];\n});\n_c = Assessment;\nexport default Assessment;\nvar _c;\n$RefreshReg$(_c, \"Assessment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSearchParams","createAssessment","getUserAssessments","GradeSubmission","getAssessment","jsxDEV","_jsxDEV","Fragment","_Fragment","Assessment","_s","launchData","setLaunchData","questions","setQuestions","id","text","options","correctAnswer","answers","setAnswers","submitted","setSubmitted","score","setScore","assessment","setAssessment","completedAssessment","setCompletedAssessment","navigate","searchParams","get","fetchAssessment","response","children","fileName","_jsxFileName","lineNumber","columnNumber","isSubmitted","handleAnswerSelect","questionId","answer","handleSubmit","correctCount","forEach","question","calculatedScore","length","lineItemUrl","assessmentData","userId","courseId","resourceLinkId","scoreGiven","scoreMaximum","activityProgress","gradingProgress","feedback","result","error","console","className","totalQuestions","correctAnswers","Math","round","name","map","option","type","value","checked","onChange","onClick","disabled","Object","keys","values","filter","index","_c","$RefreshReg$"],"sources":["D:/nauss/htdocs/react/lti-grade-passback/client/src/components/Assessment.jsx"],"sourcesContent":["// client/src/components/Assessment.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { createAssessment, getUserAssessments } from '../services/api';\r\nimport GradeSubmission from './GradeSubmission';\r\nimport { getAssessment } from '../services/api';\r\nconst Assessment = () => {\r\n  const [launchData, setLaunchData] = useState(null);\r\n  const [questions, setQuestions] = useState([\r\n    { id: 1, text: 'What is the primary purpose of LTI 1.3?',\r\n      options: ['User authentication', 'Content delivery', 'Secure tool integration', 'Video streaming'],\r\n      correctAnswer: 'Secure tool integration' },\r\n    { id: 2, text: 'Which protocol does LTI 1.3 use for authentication?',\r\n      options: ['Basic Auth', 'OAuth 2.0', 'SAML', 'Kerberos'],\r\n      correctAnswer: 'OAuth 2.0' },\r\n    { id: 3, text: 'What does AGS stand for in LTI context?',\r\n      options: ['Automated Grading System', 'Assignment and Grade Services', 'Advanced Gradebook Solution', 'Academic Grading Standard'],\r\n      correctAnswer: 'Assignment and Grade Services' }\r\n  ]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [assessment, setAssessment] = useState(null);\r\n  const [completedAssessment, setCompletedAssessment] = useState(null);\r\n  const navigate = useNavigate();\r\n const id = searchParams.get('id'); \r\n\r\n  useEffect(() => {\r\n    const fetchAssessment = async () => {\r\n       const response = await getAssessment(id);\r\n      setAssessment(response.assessment);\r\n    };\r\n\r\n    fetchAssessment();\r\n  }, []);\r\n\r\n  if (!assessment) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (assessment.isSubmitted) {\r\n    return (\r\n      <div>\r\n        <h1>Assessment Completed</h1>\r\n        <p>This assessment has already been submitted and cannot be opened again.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleAnswerSelect = (questionId, answer) => {\r\n    setAnswers({ ...answers, [questionId]: answer });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    let correctCount = 0;\r\n    questions.forEach(question => {\r\n      if (answers[question.id] === question.correctAnswer) {\r\n        correctCount++;\r\n      }\r\n    });\r\n\r\n    const calculatedScore = (correctCount / questions.length) * 100;\r\n    setScore(calculatedScore);\r\n\r\n    if (launchData && launchData.lineItemUrl) {\r\n      try {\r\n        const assessmentData = {\r\n          userId: launchData.userId,\r\n          courseId: launchData.courseId,\r\n          resourceLinkId: launchData.resourceLinkId,\r\n          lineItemUrl: launchData.lineItemUrl,\r\n          scoreGiven: calculatedScore,\r\n          scoreMaximum: 100,\r\n          activityProgress: 'Completed',\r\n          gradingProgress: 'FullyGraded',\r\n          feedback: `You got ${correctCount} out of ${questions.length} questions correct.`\r\n        };\r\n\r\n        const result = await createAssessment(assessmentData);\r\n        setAssessment(result.assessment);\r\n      } catch (error) {\r\n        console.error('Error creating assessment:', error);\r\n      }\r\n    }\r\n\r\n    setSubmitted(true);\r\n  };\r\n\r\n  if (!launchData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (completedAssessment) {\r\n    return (\r\n      <div className=\"assessment-container\">\r\n        <h1>Assessment Already Completed</h1>\r\n        <GradeSubmission\r\n          score={completedAssessment.scoreGiven}\r\n          assessment={completedAssessment}\r\n          totalQuestions={questions.length}\r\n          correctAnswers={Math.round((completedAssessment.scoreGiven / 100) * questions.length)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"assessment-container\">\r\n      <h1>LTI Assessment</h1>\r\n      <div className=\"user-info\">\r\n        <p>Welcome, {launchData.name || launchData.userId}</p>\r\n        <p>Course: {launchData.courseId}</p>\r\n      </div>\r\n      {!submitted ? (\r\n        <>\r\n          <div className=\"questions\">\r\n            {questions.map(question => (\r\n              <div key={question.id} className=\"question-card\">\r\n                <h3>{question.text}</h3>\r\n                <div className=\"options\">\r\n                  {question.options.map(option => (\r\n                    <label key={option} className=\"option-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`question-${question.id}`}\r\n                        value={option}\r\n                        checked={answers[question.id] === option}\r\n                        onChange={() => handleAnswerSelect(question.id, option)}\r\n                      />\r\n                      {option}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button\r\n            className=\"submit-button\"\r\n            onClick={handleSubmit}\r\n            disabled={Object.keys(answers).length !== questions.length}\r\n          >\r\n            Submit Assessment\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <GradeSubmission\r\n          score={score}\r\n          assessment={assessment}\r\n          totalQuestions={questions.length}\r\n          correctAnswers={Object.values(answers).filter((answer, index) => answer === questions[index].correctAnswer).length}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assessment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}