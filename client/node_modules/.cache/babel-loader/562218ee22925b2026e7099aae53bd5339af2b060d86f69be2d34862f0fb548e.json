{"ast":null,"code":"var _jsxFileName = \"D:\\\\nauss\\\\htdocs\\\\lti-grade-passback\\\\client\\\\src\\\\components\\\\Assessment.jsx\",\n  _s = $RefreshSig$();\n// client/src/components/Assessment.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createAssessment } from '../services/api';\nimport GradeSubmission from './GradeSubmission';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Assessment = () => {\n  _s();\n  const [launchData, setLaunchData] = useState(null);\n  const [questions, setQuestions] = useState([{\n    id: 1,\n    text: 'What is the primary purpose of LTI 1.3?',\n    options: ['User authentication', 'Content delivery', 'Secure tool integration', 'Video streaming'],\n    correctAnswer: 'Secure tool integration'\n  }, {\n    id: 2,\n    text: 'Which protocol does LTI 1.3 use for authentication?',\n    options: ['Basic Auth', 'OAuth 2.0', 'SAML', 'Kerberos'],\n    correctAnswer: 'OAuth 2.0'\n  }, {\n    id: 3,\n    text: 'What does AGS stand for in LTI context?',\n    options: ['Automated Grading System', 'Assignment and Grade Services', 'Advanced Gradebook Solution', 'Academic Grading Standard'],\n    correctAnswer: 'Assignment and Grade Services'\n  }]);\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [assessment, setAssessment] = useState(null);\n  const navigate = useNavigate();\n\n  // Load LTI launch data from localStorage\n  useEffect(() => {\n    const storedLaunchData = localStorage.getItem('ltiLaunchData');\n    if (!storedLaunchData) {\n      navigate('/');\n      return;\n    }\n    setLaunchData(JSON.parse(storedLaunchData));\n  }, [navigate]);\n\n  // Handle answer selection\n  const handleAnswerSelect = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n  };\n\n  // Calculate score and submit assessment\n  const handleSubmit = async () => {\n    // Calculate score\n    let correctCount = 0;\n    questions.forEach(question => {\n      if (answers[question.id] === question.correctAnswer) {\n        correctCount++;\n      }\n    });\n    const calculatedScore = correctCount / questions.length * 100;\n    setScore(calculatedScore);\n\n    // Create assessment record in the database\n    if (launchData && launchData.lineItemUrl) {\n      try {\n        const assessmentData = {\n          userId: launchData.userId,\n          courseId: launchData.courseId,\n          resourceLinkId: launchData.resourceLinkId,\n          lineItemUrl: launchData.lineItemUrl,\n          scoreGiven: calculatedScore,\n          scoreMaximum: 100,\n          activityProgress: 'Completed',\n          gradingProgress: 'FullyGraded',\n          feedback: `You got ${correctCount} out of ${questions.length} questions correct.`\n        };\n        const result = await createAssessment(assessmentData);\n        setAssessment(result.assessment);\n      } catch (error) {\n        console.error('Error creating assessment:', error);\n      }\n    }\n    setSubmitted(true);\n  };\n  if (!launchData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LTI Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", launchData.name || launchData.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Course: \", launchData.courseId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), !submitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions\",\n        children: questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"option-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${question.id}`,\n                value: option,\n                checked: answers[question.id] === option,\n                onChange: () => handleAnswerSelect(question.id, option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this), option]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmit,\n        disabled: Object.keys(answers).length !== questions.length,\n        children: \"Submit Assessment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(GradeSubmission, {\n      score: score,\n      assessment: assessment,\n      totalQuestions: questions.length,\n      correctAnswers: questions.filter(q => answers[q.id] === q.correctAnswer).length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Assessment, \"Z0oU2ZK9k7wJ0pS21MZGIIzGtTQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Assessment;\nvar _c;\n$RefreshReg$(_c, \"Assessment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","createAssessment","GradeSubmission","jsxDEV","_jsxDEV","Fragment","_Fragment","Assessment","_s","launchData","setLaunchData","questions","setQuestions","id","text","options","correctAnswer","answers","setAnswers","submitted","setSubmitted","score","setScore","assessment","setAssessment","navigate","storedLaunchData","localStorage","getItem","JSON","parse","handleAnswerSelect","questionId","answer","handleSubmit","correctCount","forEach","question","calculatedScore","length","lineItemUrl","assessmentData","userId","courseId","resourceLinkId","scoreGiven","scoreMaximum","activityProgress","gradingProgress","feedback","result","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","map","option","type","value","checked","onChange","onClick","disabled","Object","keys","totalQuestions","correctAnswers","filter","q","_c","$RefreshReg$"],"sources":["D:/nauss/htdocs/lti-grade-passback/client/src/components/Assessment.jsx"],"sourcesContent":["// client/src/components/Assessment.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createAssessment } from '../services/api';\r\nimport GradeSubmission from './GradeSubmission';\r\n\r\nconst Assessment = () => {\r\n  const [launchData, setLaunchData] = useState(null);\r\n  const [questions, setQuestions] = useState([\r\n    { id: 1, text: 'What is the primary purpose of LTI 1.3?', \r\n      options: ['User authentication', 'Content delivery', 'Secure tool integration', 'Video streaming'], \r\n      correctAnswer: 'Secure tool integration' },\r\n    { id: 2, text: 'Which protocol does LTI 1.3 use for authentication?', \r\n      options: ['Basic Auth', 'OAuth 2.0', 'SAML', 'Kerberos'], \r\n      correctAnswer: 'OAuth 2.0' },\r\n    { id: 3, text: 'What does AGS stand for in LTI context?', \r\n      options: ['Automated Grading System', 'Assignment and Grade Services', 'Advanced Gradebook Solution', 'Academic Grading Standard'], \r\n      correctAnswer: 'Assignment and Grade Services' }\r\n  ]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [assessment, setAssessment] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Load LTI launch data from localStorage\r\n  useEffect(() => {\r\n    const storedLaunchData = localStorage.getItem('ltiLaunchData');\r\n    \r\n    if (!storedLaunchData) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    \r\n    setLaunchData(JSON.parse(storedLaunchData));\r\n  }, [navigate]);\r\n\r\n  // Handle answer selection\r\n  const handleAnswerSelect = (questionId, answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionId]: answer\r\n    });\r\n  };\r\n\r\n  // Calculate score and submit assessment\r\n  const handleSubmit = async () => {\r\n    // Calculate score\r\n    let correctCount = 0;\r\n    \r\n    questions.forEach(question => {\r\n      if (answers[question.id] === question.correctAnswer) {\r\n        correctCount++;\r\n      }\r\n    });\r\n    \r\n    const calculatedScore = (correctCount / questions.length) * 100;\r\n    setScore(calculatedScore);\r\n    \r\n    // Create assessment record in the database\r\n    if (launchData && launchData.lineItemUrl) {\r\n      try {\r\n        const assessmentData = {\r\n          userId: launchData.userId,\r\n          courseId: launchData.courseId,\r\n          resourceLinkId: launchData.resourceLinkId,\r\n          lineItemUrl: launchData.lineItemUrl,\r\n          scoreGiven: calculatedScore,\r\n          scoreMaximum: 100,\r\n          activityProgress: 'Completed',\r\n          gradingProgress: 'FullyGraded',\r\n          feedback: `You got ${correctCount} out of ${questions.length} questions correct.`\r\n        };\r\n        \r\n        const result = await createAssessment(assessmentData);\r\n        setAssessment(result.assessment);\r\n      } catch (error) {\r\n        console.error('Error creating assessment:', error);\r\n      }\r\n    }\r\n    \r\n    setSubmitted(true);\r\n  };\r\n\r\n  if (!launchData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"assessment-container\">\r\n      <h1>LTI Assessment</h1>\r\n      \r\n      <div className=\"user-info\">\r\n        <p>Welcome, {launchData.name || launchData.userId}</p>\r\n        <p>Course: {launchData.courseId}</p>\r\n      </div>\r\n      \r\n      {!submitted ? (\r\n        <>\r\n          <div className=\"questions\">\r\n            {questions.map(question => (\r\n              <div key={question.id} className=\"question-card\">\r\n                <h3>{question.text}</h3>\r\n                <div className=\"options\">\r\n                  {question.options.map(option => (\r\n                    <label key={option} className=\"option-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`question-${question.id}`}\r\n                        value={option}\r\n                        checked={answers[question.id] === option}\r\n                        onChange={() => handleAnswerSelect(question.id, option)}\r\n                      />\r\n                      {option}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <button \r\n            className=\"submit-button\"\r\n            onClick={handleSubmit}\r\n            disabled={Object.keys(answers).length !== questions.length}\r\n          >\r\n            Submit Assessment\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <GradeSubmission \r\n          score={score} \r\n          assessment={assessment} \r\n          totalQuestions={questions.length} \r\n          correctAnswers={questions.filter(q => answers[q.id] === q.correctAnswer).length}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}