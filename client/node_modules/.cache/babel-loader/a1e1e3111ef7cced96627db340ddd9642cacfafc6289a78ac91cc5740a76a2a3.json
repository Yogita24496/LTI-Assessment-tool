{"ast":null,"code":"var _jsxFileName = \"D:\\\\nauss\\\\htdocs\\\\react\\\\lti-grade-passback\\\\client\\\\src\\\\components\\\\Assessment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createAssessment, getUserAssessments } from '../services/api';\nimport GradeSubmission from './GradeSubmission';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Assessment = () => {\n  _s();\n  const [launchData, setLaunchData] = useState(null);\n  const [questions, setQuestions] = useState([{\n    id: 1,\n    text: 'What is the primary purpose of LTI 1.3?',\n    options: ['User authentication', 'Content delivery', 'Secure tool integration', 'Video streaming'],\n    correctAnswer: 'Secure tool integration'\n  }, {\n    id: 2,\n    text: 'Which protocol does LTI 1.3 use for authentication?',\n    options: ['Basic Auth', 'OAuth 2.0', 'SAML', 'Kerberos'],\n    correctAnswer: 'OAuth 2.0'\n  }, {\n    id: 3,\n    text: 'What does AGS stand for in LTI context?',\n    options: ['Automated Grading System', 'Assignment and Grade Services', 'Advanced Gradebook Solution', 'Academic Grading Standard'],\n    correctAnswer: 'Assignment and Grade Services'\n  }]);\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [assessment, setAssessment] = useState(null);\n  const [completedAssessment, setCompletedAssessment] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const launchDataParam = urlParams.get('data');\n    if (launchDataParam) {\n      const data = JSON.parse(decodeURIComponent(launchDataParam));\n      localStorage.setItem('ltiLaunchData', JSON.stringify(data));\n      setLaunchData(data);\n      window.history.replaceState({}, document.title, \"/assessment\");\n    } else {\n      const storedLaunchData = localStorage.getItem('ltiLaunchData');\n      if (!storedLaunchData) navigate('/');\n      setLaunchData(JSON.parse(storedLaunchData));\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (launchData) {\n      const fetchAssessments = async () => {\n        try {\n          const assessments = await getUserAssessments(launchData.userId);\n          const completed = assessments.assessments.find(a => a.activityProgress === 'Completed');\n          if (completed) {\n            setCompletedAssessment(completed);\n          }\n        } catch (error) {\n          console.error('Error fetching assessments:', error);\n        }\n      };\n      fetchAssessments();\n    }\n  }, [launchData]);\n  const handleAnswerSelect = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      // Use full URL in development or relative path in production\n      const apiUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/api/python/grade' : '/api/python/grade';\n      const response = await axios.post(apiUrl, {\n        questions,\n        answers,\n        userId: launchData.userId,\n        courseId: launchData.courseId\n      });\n      const {\n        score,\n        correctAnswers,\n        feedback\n      } = response.data;\n      setScore(score);\n\n      // Rest of your submission logic...\n    } catch (error) {\n      console.error('Error submitting assessment:', error);\n    }\n  };\n  if (!launchData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n  if (completedAssessment) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assessment-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Assessment Already Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have already completed this assessment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GradeSubmission, {\n        score: completedAssessment.scoreGiven,\n        assessment: completedAssessment,\n        totalQuestions: questions.length,\n        correctAnswers: Math.round(completedAssessment.scoreGiven / 100 * questions.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LTI Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", launchData.name || launchData.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Course: \", launchData.courseId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), !submitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions\",\n        children: questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"option-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${question.id}`,\n                value: option,\n                checked: answers[question.id] === option,\n                onChange: () => handleAnswerSelect(question.id, option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 23\n              }, this), option]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmit,\n        disabled: Object.keys(answers).length !== questions.length,\n        children: \"Submit Assessment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(GradeSubmission, {\n      score: score,\n      assessment: assessment,\n      totalQuestions: questions.length,\n      correctAnswers: Object.values(answers).filter((answer, index) => answer === questions[index].correctAnswer).length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Assessment, \"ELzZSds6IW7Yiq0HdZk/lUfpqic=\", false, function () {\n  return [useNavigate];\n});\n_c = Assessment;\nexport default Assessment;\nvar _c;\n$RefreshReg$(_c, \"Assessment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","createAssessment","getUserAssessments","GradeSubmission","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Assessment","_s","launchData","setLaunchData","questions","setQuestions","id","text","options","correctAnswer","answers","setAnswers","submitted","setSubmitted","score","setScore","assessment","setAssessment","completedAssessment","setCompletedAssessment","navigate","urlParams","URLSearchParams","window","location","search","launchDataParam","get","data","JSON","parse","decodeURIComponent","localStorage","setItem","stringify","history","replaceState","document","title","storedLaunchData","getItem","fetchAssessments","assessments","userId","completed","find","a","activityProgress","error","console","handleAnswerSelect","questionId","answer","handleSubmit","apiUrl","process","env","NODE_ENV","response","post","courseId","correctAnswers","feedback","children","fileName","_jsxFileName","lineNumber","columnNumber","className","scoreGiven","totalQuestions","length","Math","round","name","map","question","option","type","value","checked","onChange","onClick","disabled","Object","keys","values","filter","index","_c","$RefreshReg$"],"sources":["D:/nauss/htdocs/react/lti-grade-passback/client/src/components/Assessment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createAssessment, getUserAssessments } from '../services/api';\r\nimport GradeSubmission from './GradeSubmission';\r\nimport axios from 'axios'; \r\nconst Assessment = () => {\r\n  const [launchData, setLaunchData] = useState(null);\r\n  const [questions, setQuestions] = useState([\r\n    { id: 1, text: 'What is the primary purpose of LTI 1.3?',\r\n      options: ['User authentication', 'Content delivery', 'Secure tool integration', 'Video streaming'],\r\n      correctAnswer: 'Secure tool integration' },\r\n    { id: 2, text: 'Which protocol does LTI 1.3 use for authentication?',\r\n      options: ['Basic Auth', 'OAuth 2.0', 'SAML', 'Kerberos'],\r\n      correctAnswer: 'OAuth 2.0' },\r\n    { id: 3, text: 'What does AGS stand for in LTI context?',\r\n      options: ['Automated Grading System', 'Assignment and Grade Services', 'Advanced Gradebook Solution', 'Academic Grading Standard'],\r\n      correctAnswer: 'Assignment and Grade Services' }\r\n  ]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [assessment, setAssessment] = useState(null);\r\n  const [completedAssessment, setCompletedAssessment] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const launchDataParam = urlParams.get('data');\r\n\r\n    if (launchDataParam) {\r\n      const data = JSON.parse(decodeURIComponent(launchDataParam));\r\n      localStorage.setItem('ltiLaunchData', JSON.stringify(data));\r\n      setLaunchData(data);\r\n      window.history.replaceState({}, document.title, \"/assessment\");\r\n    } else {\r\n      const storedLaunchData = localStorage.getItem('ltiLaunchData');\r\n      if (!storedLaunchData) navigate('/');\r\n      setLaunchData(JSON.parse(storedLaunchData));\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    if (launchData) {\r\n      const fetchAssessments = async () => {\r\n        try {\r\n          const assessments = await getUserAssessments(launchData.userId);\r\n          const completed = assessments.assessments.find(a => a.activityProgress === 'Completed');\r\n          if (completed) {\r\n            setCompletedAssessment(completed);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching assessments:', error);\r\n        }\r\n      };\r\n\r\n      fetchAssessments();\r\n    }\r\n  }, [launchData]);\r\n\r\n  const handleAnswerSelect = (questionId, answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionId]: answer\r\n    });\r\n  };\r\n\r\nconst handleSubmit = async () => {\r\n  try {\r\n    // Use full URL in development or relative path in production\r\n    const apiUrl = process.env.NODE_ENV === 'development' \r\n      ? 'http://localhost:3001/api/python/grade' \r\n      : '/api/python/grade';\r\n\r\n    const response = await axios.post(apiUrl, {\r\n      questions,\r\n      answers,\r\n      userId: launchData.userId,\r\n      courseId: launchData.courseId\r\n    });\r\n\r\n    const { score, correctAnswers, feedback } = response.data;\r\n    setScore(score);\r\n    \r\n    // Rest of your submission logic...\r\n  } catch (error) {\r\n    console.error('Error submitting assessment:', error);\r\n  }\r\n};\r\n\r\n  if (!launchData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (completedAssessment) {\r\n    return (\r\n      <div className=\"assessment-container\">\r\n        <h1>Assessment Already Completed</h1>\r\n        <p>You have already completed this assessment.</p>\r\n        <GradeSubmission\r\n          score={completedAssessment.scoreGiven}\r\n          assessment={completedAssessment}\r\n          totalQuestions={questions.length}\r\n          correctAnswers={Math.round((completedAssessment.scoreGiven / 100) * questions.length)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"assessment-container\">\r\n      <h1>LTI Assessment</h1>\r\n\r\n      <div className=\"user-info\">\r\n        <p>Welcome, {launchData.name || launchData.userId}</p>\r\n        <p>Course: {launchData.courseId}</p>\r\n      </div>\r\n\r\n      {!submitted ? (\r\n        <>\r\n          <div className=\"questions\">\r\n            {questions.map(question => (\r\n              <div key={question.id} className=\"question-card\">\r\n                <h3>{question.text}</h3>\r\n                <div className=\"options\">\r\n                  {question.options.map(option => (\r\n                    <label key={option} className=\"option-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`question-${question.id}`}\r\n                        value={option}\r\n                        checked={answers[question.id] === option}\r\n                        onChange={() => handleAnswerSelect(question.id, option)}\r\n                      />\r\n                      {option}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <button\r\n            className=\"submit-button\"\r\n            onClick={handleSubmit}\r\n            disabled={Object.keys(answers).length !== questions.length}\r\n          >\r\n            Submit Assessment\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <GradeSubmission\r\n          score={score}\r\n          assessment={assessment}\r\n          totalQuestions={questions.length}\r\n          correctAnswers={Object.values(answers).filter((answer, index) => answer === questions[index].correctAnswer).length}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assessment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}